@component-name = "portal-web-forms-and-data-lists"
definition {
    property testray.main.component.name = "Forms";

    setUp {
    TestCase.setUpPortalInstance();

    User.firstLoginPG();

    Navigator.openURL();
    }

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if (${testPortalInstance} == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Navigator.openURL();

			ProductMenu.gotoPortlet(
				category = "Content & Data",
				portlet = "Forms");

			FormsAdmin.teardownForms();

			Navigator.gotoNavItem(navItem = "Element Sets");

			FormsAdmin.teardownElementSets();

			PagesAdmin.tearDownCP();
		}
	}

    @description = "Access Portal Global Menu and validate CONFIGURATION string at Control Panel"
    @priority = "5"
    test ValidateConfigurationStringAtControlPanel {
        Click(locator1 = "//button[@data-qa-id='applicationsMenu']");
        
        Pause(locator1 = "3000");

        Click(locator1 = "//span[contains(text(),'Control Panel')]");

        Pause(locator1 = "3000");

        AssertElementPresent(locator1 ="//h2[@id='nav_control_panel.configuration']");

        Pause(locator1 = "3000");
    } 

   /* @description = "Set Screen size to custom and validate values"
    @priority = "5"
    test SetScreenSizeAndValidateValues {
    }*/

    @description = "Access Portal Global Menu and validate changes in SIMULATION with alterations in SCREEN SIZE and validate after all"
    @priority = "5"
    test CreatingNewForm {
        task("Going to Forms") {
            FormsAdmin.addForm();
    }
        task("Editing Title") {
            Form.editName(formName = "Liferay's Forms");
    }
        task("Adding and editing Text Field") {
            Form.addTextField();
   
            FormViewBuilder.editFieldLabel(
			fieldLabel = "Text",
			label = "Full Name");

            Form.closeSidebar();
 
    }
        task("Adding and editing Numeric Field") {
            Form.gotoAddField(
			fieldPositionNumber = 1,
			fieldType = "Numeric");

            Form.editFieldLabelMetal(fieldValue= "Age");
            
    }
        task("Translate to Portuguese") {
            Form.addTranslation(localizedLanguage= "Portuguese (Brazil)");
            Form.save();
    }
        task("Editing TITLE, FULL NAME and AGE") {
            Form.selectTranslation(localizedLanguage= "Portuguese (Brazil)");
        
            Form.editName(formName = "Forms da Liferay");

            FormViewBuilder.editFieldLabel(
            fieldLabel = "Full Name",
            label = "Nome Completo");
           
            FormViewBuilder.editFieldLabel(
            fieldLabel = "Age",
            label = "Idade");

            Form.save();
            Form.publishForm();
    }
        task("Going to Published Form") {
            FormsAdminNavigator.gotoPublishedForm();
    }
        task("New information on published forms") {
            FormViewBuilder.editText(
            fieldName = "Full Name",
            fieldValue = "Daniel");

            FormViewBuilder.editText(
            fieldName = "Age",
            fieldValue = "17");

            FormPortlet.clickSubmit();

		    Form.submitAgain();

    }
        task("Changing language") {
            FormViewBuilder.changeAppLanguageTo(changeAppLanguageTo = "en-US");

            FormViewBuilder.changeAppLanguageTo(changeAppLanguageTo = "portuguÃªs-Brasil");
    }
        task("New information on published forms") {
            FormViewBuilder.editText(
            fieldName = "Nome Completo",
            fieldValue = "Danielzinho");

            FormViewBuilder.editText(
            fieldName = "Idade",
            fieldValue = "18");

            FormPortlet.clickSubmit();

		    Form.submitAgain();
    }
        task("Comming back to HOME") {
            Navigator.openWithAppendToBaseURL(baseurl= "http://localhost:8080", urlAppend= "home");
             
    }   
        task("Comming back to HOME") {
            ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Forms");
    }   
        task("Opening View Entries") {
            FormsAdminNavigator.gotoViewEntries();
    }
        task("Validate if is visible") {
            LexiconEntry.viewEntryContent(
            key_rowAny = "Daniel",
            key_rowEntry = "17");

            LexiconEntry.viewEntryContent(
            key_rowAny = "Danielzinho",
            key_rowEntry = "18");
        }
    
}
}

